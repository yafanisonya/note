(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{402:function(n,r,t){"use strict";t.r(r);var e=t(42),a=Object(e.a)({},(function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"闭包练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包练习"}},[n._v("#")]),n._v(" 闭包练习")]),n._v(" "),t("h4",{attrs:{id:"练习1："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习1："}},[n._v("#")]),n._v(" 练习1：")]),n._v(" "),t("blockquote",[t("p",[n._v("如下代码输出多少？如果想输出3，那如何改造代码？")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var fnArr = [];\nfor (var i = 0; i < 10; i ++) {\n  fnArr[i] =  function(){\n    return i\n  };\n}\nconsole.log( fnArr[3]() ) // 10\n")])])]),t("p",[t("code",[n._v("输出10")]),n._v("\nfnArr[3]() 执行匿名函数 function(){ return i} ，函数内部无i，for循环内部无作用域，匿名函数作用域为全局作用域,for循环执行完毕后i变为10，所以输出i=10")]),n._v(" "),t("ul",[t("li",[n._v("方法1")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var fnArr = []\nfor (var i = 0; i < 10; i ++) {\n  fnArr[i] =  (function(j){\n    return function(){\n      return j\n    } \n  })(i)\n}\nconsole.log( fnArr[3]() ) // 3\n\n//等价于\n  fnArr[3] =  (function(j){\n    return function(){\n      return j\n    } \n  })(3)\n//继续简化\nvar a =  (function fn(j){\n    return function(){\n      return j\n    } \n  })(3)\na()\n//相当于a等于立即执行函数，继续简化\nfunction fn(j){\n    return function(){\n      return j\n    } \nvar a = fn(3)\n//继续\nfunction fn(j){\n    function f(){\n        return j\n    }\n    return f\n } \nvar a = fn(3)\n")])])]),t("ul",[t("li",[n._v("方法2")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var fnArr = []\nfor (var i = 0; i < 10; i ++) {\n  (function(i){\n    fnArr[i] =  function(){\n      return i\n    } \n  })(i)\n}\nconsole.log( fnArr[3]() ) // 3\n")])])]),t("ul",[t("li",[n._v("方法3")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var fnArr = []\nfor (let i = 0; i < 10; i ++) {\n  fnArr[i] =  function(){\n    return i\n  } \n}\nconsole.log( fnArr[3]() ) // 3\n")])])]),t("h4",{attrs:{id:"练习2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习2"}},[n._v("#")]),n._v(" 练习2")]),n._v(" "),t("blockquote",[t("p",[n._v("如下代码输出多少？如何连续输出 0,1,2,3,4")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("for(var i=0; i<5; i++){\n  setTimeout(function(){\n    console.log('delayer:' + i )\n  }, 0)\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("delayer:5\ndelayer:5\ndelayer:5\ndelayer:5\ndelayer:5\n")])])]),t("blockquote",[t("p",[n._v("setTimeout将当前函数加到任务队列，待for循环结束后执行任务队列；当前作用域无i，上级i=5，所以输出5次delayer:5")])]),n._v(" "),t("ul",[t("li",[n._v("方法1：")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("for(var i=0; i<5; i++){\n  (function(j){\n    setTimeout(function(){\n      console.log('delayer:' + j )\n    }, 0)    \n  })(i)\n}\n\n//等价于\nfunction fn(j){\n  var j = arguments[0]\n  setTimeout(function(){\n      console.log('delayer:' + j )\n  }, 0) \n}\nfn(i)\n")])])]),t("ul",[t("li",[n._v("方法2")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("for(var i=0; i<5; i++){\n  setTimeout((function(j){\n    return function(){\n      console.log('delayer:' + j )\n    }\n  }(i)), 0)    \n}\n")])])]),t("h4",{attrs:{id:"练习3："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习3："}},[n._v("#")]),n._v(" 练习3：")]),n._v(" "),t("blockquote",[t("p",[n._v("如下代码输出多少？")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("function makeCounter() {\n  var count = 0\n\n  return function() {\n    return count++\n  };\n}\n\nvar counter = makeCounter()\nvar counter2 = makeCounter();\n\nconsole.log( counter() ) // 0\nconsole.log( counter() ) // 1\n\nconsole.log( counter2() ) // 0\nconsole.log( counter2() ) // 1\n")])])]),t("blockquote",[t("p",[n._v("counter与counter2指向不同对象，作用域不同。")])])])}),[],!1,null,null,null);r.default=a.exports}}]);