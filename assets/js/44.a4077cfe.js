(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{392:function(e,a,t){"use strict";t.r(a);var n=t(42),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"jquery常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery常用方法"}},[e._v("#")]),e._v(" jQuery常用方法")]),e._v(" "),t("blockquote",[t("p",[e._v("下述方法均基于以下代码")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<!DOCTYPE html>\n<html>\n<head>\n  <meta charset="utf-8">\n</head>\n<body>\n  <div class="mod-tab">\n    <div class="header">\n      <div class="tab ">1</div>\n      <div class="tab active">2</div>\n      <div class="tab">3</div>\n      <div class="tab">4</div>\n    </div>\n    <div class="content">\n      <div class="panel ">panel1</div>\n      <div class="panel active">panel2</div>\n      <div class="panel">panel3</div>\n      <div class="panel">panel4</div>\n    </div>\n  </div>\n</body>\n</html>\n')])])]),t("p",[e._v("##添加元素")]),e._v(" "),t("h3",{attrs:{id:"_1-append"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-append"}},[e._v("#")]),e._v(" 1 .append()")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(".append(content[,content])")])]),e._v(" "),t("li",[t("code",[e._v(".append(function(index,html))")])])]),e._v(" "),t("blockquote",[t("p",[e._v("可以一次添加多个内容，内容可以是DOM对象、HTML string、 jQuery对象\n如果参数是function，function可以返回DOM对象、HTML string、 jQuery对象，参数是集合中的元素位置与原来的html值")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( ".panel.active" ).append( "<p>Test</p>" );    //添加p标签\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-06d487d00751804c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"HTML string"}})]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( "p" ).append( document.createTextNode( "Hello" ) );      //p标签添加DOM对象]\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-99467b7319a06a42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"DOM对象"}})]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( ".tab.active" ).append( $( "p" ) );   //添加jQuery对象\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-1f0f767dbd2f4e77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"jQuery对象"}})]),e._v(" "),t("blockquote",[t("p",[e._v("注意：通常我们将页面上一个元素插入到DOM里另一个地方，它会被从老地方移走，类似剪切的效果；   p标签从.panel.active 移动到.tab.active\n#####2 .appendTo()\n把对象插入到目标元素尾部，目标元素可以是selector, DOM对象, HTML string, 元素集合, jQuery对象;")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( "p" ).appendTo( $(".header") ); //p插入到.header尾部\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-15504007906e63bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"jQuery对象"}})]),e._v(" "),t("h3",{attrs:{id:"_2-prepend"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-prepend"}},[e._v("#")]),e._v(" 2 .prepend()")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(".prepend(content[,content])")])]),e._v(" "),t("li",[t("code",[e._v(".prepend(function(index,html))")])])]),e._v(" "),t("blockquote",[t("p",[e._v("向对象头部追加内容")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( ".header" ).prepend( $("p") ); ; //p追加到.header头部\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-8019f40cc4477808.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"prepend"}})]),e._v(" "),t("h3",{attrs:{id:"_3-prependto-target"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-prependto-target"}},[e._v("#")]),e._v(" 3.prependTo(target)")]),e._v(" "),t("blockquote",[t("p",[e._v("把对象插入到目标元素头部")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( "p" ).prependTo( $(".header") )\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-94c5fb6446b5e43b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"prependTo"}})]),e._v(" "),t("blockquote",[t("p",[e._v("注意两者区别:\npeepend: $(A).prepend( B )  将B追加到A的头部\nprependTo:$(A).prepend( B )  将A插入到B的头部")])]),e._v(" "),t("h3",{attrs:{id:"_4-before"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-before"}},[e._v("#")]),e._v(" 4 .before()")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(".before([content][,content])")])]),e._v(" "),t("li",[t("code",[e._v(".before(function)")])])]),e._v(" "),t("blockquote",[t("p",[e._v("在对象前面(不是头部，而是外面，和对象并列同级)插入内容")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( ".panel.active" ).before( "<p>TestHello</p>" );\n')])])]),t("h3",{attrs:{id:"_5-insertbefore-target"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-insertbefore-target"}},[e._v("#")]),e._v(" 5.insertBefore(target)")]),e._v(" "),t("blockquote",[t("p",[e._v("把对象插入到target之前（同样不是头部，是同级）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( "<p>TestHello</p>" ).insertBefore( $(".panel.active" ));\n')])])]),t("h3",{attrs:{id:"_6-after"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-after"}},[e._v("#")]),e._v(" 6 .after()")]),e._v(" "),t("p",[t("code",[e._v(".after([content][,content])")]),e._v(" "),t("code",[e._v(".after(function（index）)")]),e._v("\n和before相反，在对象后面(不是尾部，而是外面，和对象并列同级)插入内容")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( ".panel.active" ).after( "<p>TestHello</p>" );\n')])])]),t("h3",{attrs:{id:"_7-insertafter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-insertafter"}},[e._v("#")]),e._v(" 7 .insertAfter()")]),e._v(" "),t("blockquote",[t("p",[e._v("和insertBefore相反，把对象插入到target之后（同样不是尾部，是同级）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( "<p>TestHello</p>" ).insertAfter( $(".panel.active" ));\n')])])]),t("h2",{attrs:{id:"删除元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除元素"}},[e._v("#")]),e._v(" 删除元素")]),e._v(" "),t("h3",{attrs:{id:"remove-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remove-selector"}},[e._v("#")]),e._v(" .remove([selector])")]),e._v(" "),t("blockquote",[t("p",[e._v("删除被选元素（及其子元素）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$( \".header\" ).remove();           //移除全部\n$('div').remove('.tab.active');    //移除指定元素\n")])])]),t("h3",{attrs:{id:"empty"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#empty"}},[e._v("#")]),e._v(" .empty()")]),e._v(" "),t("blockquote",[t("p",[e._v("清空被选择元素内所有子元素")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$('.content').empty();\n")])])]),t("h2",{attrs:{id:"html-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-string"}},[e._v("#")]),e._v(" html([string])")]),e._v(" "),t("blockquote",[t("p",[e._v("读写两用的方法，用于获取/修改元素的innerHTML\n- 当没有传递参数的时候，返回元素的innerHTML\n-  当传递了一个string参数的时候，修改元素的innerHTML为参数值")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$(\'.header\').html();\n"\n      <div class="tab ">1</div>\n      <div class="tab active">2</div>\n      <div class="tab">3</div>\n      <div class="tab">4</div>\n    "\n$(\'.header\').html(\'<p>hh</p>\');\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-d9cf81cd5ac042e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"html"}})]),e._v(" "),t("h2",{attrs:{id:"text-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#text-string"}},[e._v("#")]),e._v(" text([string])")]),e._v(" "),t("blockquote",[t("p",[e._v("操作的是DOM的innerText值\n- 当没有传递参数的时候，返回元素的innerText\n-  当传递了一个string参数的时候，修改元素的innerText为参数值")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$('.tab.active').text();\n$('.tab.active').text(4);\n")])])]),t("h2",{attrs:{id:"包裹元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包裹元素"}},[e._v("#")]),e._v(" 包裹元素")]),e._v(" "),t("h4",{attrs:{id:"wrap-wrappingelement-wrap-function-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wrap-wrappingelement-wrap-function-index"}},[e._v("#")]),e._v(" wrap(wrappingElement) / .wrap(function(index))")]),e._v(" "),t("blockquote",[t("p",[e._v("为每个对象包裹一层HTML结构，可以是selector, element, HTML string, jQuery object")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div class="container">\n  <div class="inner">Hello</div>\n  <div class="inner">Goodbye</div>\n</div>\n')])])]),t("p",[t("code",[e._v('$( ".inner" ).wrap( "<div class=\'new\'></div>" );')]),e._v("\n结果")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div class="container">\n  <div class="new">\n    <div class="inner">Hello</div>\n  </div>\n  <div class="new">\n    <div class="inner">Goodbye</div>\n  </div>\n</div>\n')])])]),t("h4",{attrs:{id:"wrapall-wrappingelement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wrapall-wrappingelement"}},[e._v("#")]),e._v(" .wrapAll(wrappingElement)")]),e._v(" "),t("blockquote",[t("p",[e._v("把所有匹配对象包裹在同一个HTML结构中")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div class="container">\n  <div class="inner">Hello</div>\n  <div class="inner">Goodbye</div>\n</div>\n')])])]),t("p",[t("code",[e._v('$( ".inner" ).wrapAll( "<div class=\'new\' />");')]),e._v("\n结果")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    <div class="container">\n      <div class="new">\n        <div class="inner">Hello</div>\n        <div class="inner">Goodbye</div>\n      </div>\n    </div>\n')])])]),t("h4",{attrs:{id:"wrapinner-wrappingelement-wrapinner-function-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wrapinner-wrappingelement-wrapinner-function-index"}},[e._v("#")]),e._v(" .wrapInner(wrappingElement) / .wrapInner(function(index))")]),e._v(" "),t("blockquote",[t("p",[e._v("包裹匹配元素内容")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div class="container">\n  <div class="inner">Hello</div>\n  <div class="inner">Goodbye</div>\n</div>\n')])])]),t("p",[t("code",[e._v('$( ".inner" ).wrapInner( "<div class=\'new\'></div>");')]),e._v("\n执行结果")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div class="container">\n  <div class="inner">\n    <div class="new">Hello</div>\n  </div>\n  <div class="inner">\n    <div class="new">Goodbye</div>\n  </div>\n</div>\n')])])]),t("h4",{attrs:{id:"unwrap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unwrap"}},[e._v("#")]),e._v(" .unwrap()")]),e._v(" "),t("blockquote",[t("p",[e._v("把DOM元素的parent移除\n"),t("code",[e._v('pTags = $( "p" ).unwrap();')])])]),e._v(" "),t("h4",{attrs:{id:"each"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#each"}},[e._v("#")]),e._v(" .each()")]),e._v(" "),t("p",[t("code",[e._v(".each( function(index, Element) )")])]),e._v(" "),t("blockquote",[t("p",[e._v("遍历一个jQuery对象，为每个匹配元素执行一个函数")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$( ".content" ).each(function( index ) {\n  console.log( index + ":" + $(this).text() );\n});\n')])])]),t("h4",{attrs:{id:"clone"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[e._v("#")]),e._v(" .clone()")]),e._v(" "),t("blockquote",[t("p",[e._v(".clone()方法深度复制所有匹配的元素集合，包括所有匹配元素、匹配元素的下级元素、文字节点")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$('.content').clone().appendTo('.header');\n")])])]),t("h4",{attrs:{id:"index-index-selector-index-element"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#index-index-selector-index-element"}},[e._v("#")]),e._v(" .index() / .index(selector)/ .index(element)")]),e._v(" "),t("p",[e._v("从给定集合中查找特定元素index")]),e._v(" "),t("blockquote",[t("p",[e._v("没参数返回第一个元素index\n如果参数是DOM对象或者jQuery对象，则返回参数在集合中的index\n如果参数是选择器，返回第一个匹配元素index，没有找到返回-1")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var listItem = $( "#bar" );\n $( "li" ).index( listItem ) \n')])])]),t("h4",{attrs:{id:"ready-handler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ready-handler"}},[e._v("#")]),e._v(" .ready( handler )")]),e._v(" "),t("blockquote",[t("p",[e._v("当DOM准备就绪时，指定一个函数来执行。\n虽然JavaScript提供了load事件，当页面呈现时用来执行这个事件，直到所有的东西，如图像已被完全接收前，此事件不会被触发。\n在大多数情况下，只要DOM结构已完全加载时，脚本就可以运行。传递处理函数给.ready()方法，能保证DOM准备好后就执行这个函数，因此，这里是进行所有其它事件绑定及运行其它 jQuery 代码的最佳地方。\n如果执行的代码需要在元素被加载之后才能使用时，（例如，取得图片的大小需要在图片被加载完后才能知道），就需要将这样的代码放到 load 事件中。")])]),e._v(" "),t("p",[e._v("下面两种语法全部是等价的：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$(document).ready(handler)\n$(handler)\n//我们经常这么使用\n$(function(){\n    console.log('ready');\n});\n")])])]),t("h4",{attrs:{id:"jquery-extend-deep-target-object1-objectn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery-extend-deep-target-object1-objectn"}},[e._v("#")]),e._v(" jQuery.extend([deep,] target [, object1 ] [, objectN ] )")]),e._v(" "),t("blockquote",[t("p",[e._v("当我们提供两个或多个对象给$.extend()，对象的所有属性都添加到目标对象（target参数）。")])]),e._v(" "),t("p",[e._v("如果只有一个参数提供给$.extend()，这意味着目标参数被省略。在这种情况下，jQuery对象本身被默认为目标对象。\n目标对象（第一个参数）将被修改，并且将通过$.extend()返回。然而，如果我们想保留原对象，我们可以通过传递一个空对象作为目标对象：")]),e._v(" "),t("p",[t("code",[e._v("var object = $.extend({}, object1, object2);")]),e._v("\n在默认情况下，通过$.extend()合并操作不是递归的;")]),e._v(" "),t("p",[e._v("如果第一个对象的属性本身是一个对象或数组，那么它将完全用第二个对象相同的key重写一个属性。这些值不会被合并。如果将 true作为该函数的第一个参数，那么会在对象上进行递归的合并。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var object1 = {\n  apple: 0,\n  banana: { weight: 52, price: 100 },\n  cherry: 97\n};\nvar object2 = {\n  banana: { price: 200 },\n  durian: 100\n};\n// Merge object2 into object1\n$.extend( object1, object2 );   \n//{apple: 0,banana: {price: 200},cherry: 97,durian: 100}\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);