(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{393:function(a,e,t){"use strict";t.r(e);var s=t(42),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"jquery属性-css操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery属性-css操作"}},[a._v("#")]),a._v(" jQuery属性&CSS操作")]),a._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"val"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#val"}},[a._v("#")]),a._v(" .val()")])])]),a._v(" "),t("blockquote",[t("p",[a._v(".val()方法主要用于获取表单元素的值，比如 input, select 和 textarea\n当方法没有参数的时候返回input的value值，当传递了一个参数的时候，方法修改input的value值为参数值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$('input').val()\n$('input').val('newValue');\n")])])]),t("ul",[t("li",[t("h3",{attrs:{id:"attr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attr"}},[a._v("#")]),a._v(" .attr()")])])]),a._v(" "),t("p",[t("code",[a._v(".attr(attributeName)")])]),a._v(" "),t("blockquote",[t("p",[a._v("获取元素特定属性的值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div class=\'header\'></div>\nconsole.log( $("div").attr("class"))    //header\n')])])]),t("p",[t("code",[a._v(".attr(attributeName,value)")]),a._v(" "),t("code",[a._v(".attr(attributesJson)")]),a._v(" "),t("code",[a._v(".attr( attributeName, function(index, attr) )")])]),a._v(" "),t("blockquote",[t("p",[a._v("为元素属性赋值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<img id=\"greatphoto\" src=\"brush-seller.jpg\" alt=\"brush seller\" />\n$('#greatphoto').attr('alt', 'Beijing Brush Seller');   //设置单个属性\n$( \"#greatphoto\" ).attr({\n  alt: \"Beijing Brush Seller\",\n  title: \"photo by Kelly Clark\"\n});  //设置多个属性\n$('#greatphoto').attr('title', function(i, val) {\n  return val + ' - photo by Kelly Clark'\n});   //通过函数设置属性\n")])])]),t("ul",[t("li",[t("h3",{attrs:{id:"removeattr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#removeattr"}},[a._v("#")]),a._v(" .removeAttr()")])])]),a._v(" "),t("blockquote",[t("p",[a._v("为匹配的元素集合中的每个元素中移除一个属性（attribute）")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<div class=\"header\"></div>\n$('div').removeAttr('class');   //移除class属性\n")])])]),t("ul",[t("li",[t("h3",{attrs:{id:"prop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prop"}},[a._v("#")]),a._v(" .prop()")])])]),a._v(" "),t("p",[t("code",[a._v(".prop( propertyName )")])]),a._v(" "),t("blockquote",[t("p",[a._v("获取匹配的元素集中第一个元素的属性（property）值")])]),a._v(" "),t("p",[t("code",[a._v(".prop( propertyName, value )")])]),a._v(" "),t("blockquote",[t("p",[a._v("为匹配的元素设置一个或多个属性（properties）")])]),a._v(" "),t("p",[a._v("当设置"),t("code",[a._v("selectedIndex")]),a._v(","),t("code",[a._v("tagName")]),a._v(", "),t("code",[a._v("nodeName")]),a._v(", "),t("code",[a._v("nodeType")]),a._v(", "),t("code",[a._v("ownerDocument")]),a._v(", "),t("code",[a._v("defaultChecked")]),a._v(", 或 "),t("code",[a._v("defaultSelected")]),a._v("必须使用prop方法。从jQuery1.6开始，这些属性可以不再使用.attr()方法来设置。他们没有相应的属性（attributes），只有属性(property)。")]),a._v(" "),t("h2",{attrs:{id:"css相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css相关"}},[a._v("#")]),a._v(" CSS相关")]),a._v(" "),t("hr"),a._v("\n- ###.css()\n>用来处理元素的css\n"),t("p",[t("code",[a._v(".css(propertyName)")]),a._v(" "),t("code",[a._v(".css(propertyNames)")])]),a._v(" "),t("blockquote",[t("p",[a._v("获取元素style特定property的值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  <style>\n    div{\n       width:100px;\n       height:200px;\n       color:yellow;\n       background-color:black;\n    }\n  </style>\n$(\'div\').css( "width" );   //"100px"\nvar styleProps = $(\'div\').css([\n  "width",\n  "height",\n  "color",\n  "background-color"\n]);\n//{width: "100px", height: "200px", color: "rgb(255, 255, 0)", background-color: "rgb(0, 0, 0)"}\n')])])]),t("p",[t("code",[a._v(".css(propertyName,value)")]),a._v(" "),t("code",[a._v(".css( propertyName, function(index, value) )")]),a._v(" "),t("code",[a._v(".css( propertiesJson )")])]),a._v(" "),t("blockquote",[t("p",[a._v("设置元素style特定property的值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('$( \'div\' ).css( "width", function( index ) {\n  return index * 50;\n});    //通过函数设置属性\n\n$(\'div\' ).css( "width", "+=200" );\n\n$(\'div\' ).css( "background-color", "yellow" );   //设置单个属性\n\n$(\'div\' ).css({\n  "background-color": "yellow",\n  "font-weight": "bolder"\n});    //设置多个属性\n')])])]),t("ul",[t("li",[t("h3",{attrs:{id:"addclass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#addclass"}},[a._v("#")]),a._v(" .addClass()")])])]),a._v(" "),t("p",[a._v("'.addClass(className)'\n"),t("code",[a._v(".addClass(function(index,currentClass))")])]),a._v(" "),t("blockquote",[t("p",[a._v("为元素添加class，不是覆盖原class，是追加，也不会检查重复")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('$( "p" ).addClass( "myClass yourClass" );\n\n$( "ul li" ).addClass(function( index ) {\n  return "item-" + index;\n});\n')])])]),t("ul",[t("li",[t("h3",{attrs:{id:"removeclass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#removeclass"}},[a._v("#")]),a._v(" .removeClass()")])])]),a._v(" "),t("p",[t("code",[a._v("removeClass([className])")]),a._v(" "),t("code",[a._v("removeClass(function(index,class))")])]),a._v(" "),t("blockquote",[t("p",[a._v("移除元素单个/多个/所有class")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('$( "p" ).removeClass( "myClass yourClass" );\n\n$( "li:last" ).removeClass(function() {\n  return $( this ).prev().attr( "class" );\n});\n')])])]),t("ul",[t("li",[t("h3",{attrs:{id:"hasclass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hasclass"}},[a._v("#")]),a._v(" .hasClass()")])])]),a._v(" "),t("p",[t("code",[a._v(".hasClass(className)")])]),a._v(" "),t("blockquote",[t("p",[a._v("检查元素是否包含某个class，返回true/false")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('$( "#mydiv" ).hasClass( "foo" )\n')])])]),t("ul",[t("li",[t("h3",{attrs:{id:"toggleclass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#toggleclass"}},[a._v("#")]),a._v(" .toggleClass()")])])]),a._v(" "),t("blockquote",[t("p",[a._v("在匹配的元素集合中的每个元素上用来切换的一个或多个（用空格隔开）样式类名。")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div class="tumble">Some text.</div>\n\n$( "div.tumble" ).toggleClass( "bounce" )   //第一次执行\n<div class="tumble bounce">Some text.</div>  //执行结果\n\n$( "div.tumble" ).toggleClass( "bounce" )  //第二次执行\n<div class="tumble">Some text.</div>    //执行结果')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);