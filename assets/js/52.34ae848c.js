(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{403:function(t,e,n){"use strict";n.r(e);var r=n(42),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),n("h3",{attrs:{id:"同源策略："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#同源策略："}},[t._v("#")]),t._v(" 同源策略：")]),t._v(" "),n("blockquote",[n("p",[t._v("浏览器出于安全方面的考虑，只允许与本域下的接口交互。不同源的客户端脚本在没有明确授权的情况下，不能读写对方的资源。")])]),t._v(" "),n("h4",{attrs:{id:"本域："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本域："}},[t._v("#")]),t._v(" 本域：")]),t._v(" "),n("ul",[n("li",[t._v("同协议：如都是http或者https")]),t._v(" "),n("li",[t._v("同域名：如都是"),n("a",{attrs:{href:"http://jirengu.com/a",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://jirengu.com/a"),n("OutboundLink")],1),t._v(" 和"),n("a",{attrs:{href:"http://jirengu.com/b",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://jirengu.com/b"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("同端口：如都是80端口")])]),t._v(" "),n("p",[t._v("下表给出了相对http://store.company.com/dir/page.html同源检测的示例:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("URL")]),t._v(" "),n("th",[t._v("结果")]),t._v(" "),n("th",[t._v("原因")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("http://store.company.com/dir2/other.html")]),t._v(" "),n("td",[t._v("成功")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("http://store.company.com/dir/inner/another.html")]),t._v(" "),n("td",[t._v("成功")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("https://store.company.com/secure.html")]),t._v(" "),n("td",[t._v("失败")]),t._v(" "),n("td",[t._v("不同协议 ( https和http )")])]),t._v(" "),n("tr",[n("td",[t._v("http://store.company.com:81/dir/etc.html")]),t._v(" "),n("td",[t._v("失败")]),t._v(" "),n("td",[t._v("不同端口 ( 81和80)")])]),t._v(" "),n("tr",[n("td",[t._v("http://news.company.com/dir/other.html")]),t._v(" "),n("td",[t._v("失败")]),t._v(" "),n("td",[t._v("不同域名 ( news和store )")])])])]),t._v(" "),n("h2",{attrs:{id:"跨域的两种方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域的两种方法"}},[t._v("#")]),t._v(" 跨域的两种方法")]),t._v(" "),n("h3",{attrs:{id:"jsonp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),n("blockquote",[n("p",[t._v("JSONP是通过 script 标签加载数据的方式去获取数据当做 JS 代码来执行 提前在页面上声明一个函数，函数名通过接口传参的方式传给后台，后台解析到函数名后在原始数据上「包裹」这个函数名，发送给前端。换句话说，JSONP 需要对应接口的后端的配合才能实现。")])]),t._v(" "),n("p",[t._v("比如，有个html页面，它里面的代码需要获取一个不同域上的json数据，假设这个json数据地址是"),n("a",{attrs:{href:"http://127.0.0.1:8080/getNews",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://127.0.0.1:8080/getNews"),n("OutboundLink")],1),t._v("，那么html中的代码就可以这样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<script>\n\n  $('.show').addEventListener('click', function(){\n    var script = document.createElement('script');\n    // 传参并指定回调执行函数为appendHtml\n    script.src = 'http://127.0.0.1:8080/getNews?callback=appendHtml';\n    document.head.appendChild(script);\n    document.head.removeChild(script);\n  })\n  // 回调执行函数\n  function appendHtml(news){\n    var html = '';\n    for( var i=0; i<news.length; i++){\n      html += '<li>' + news[i] + '</li>';\n    }\n    console.log(html);\n    $('.news').innerHTML = html;\n  }\n\n  function $(id){\n    return document.querySelector(id);\n  }\n<\/script>\n")])])]),n("p",[t._v("获取数据的地址后面还有一个callback参数，按惯例是用这个参数名，但是用其他的也一样。\n"),n("code",[t._v("script.src = 'http://127.0.0.1:8080/getNews?callback=appendHtml'")]),t._v("\n因为是当做一个js文件来引入的，所以"),n("a",{attrs:{href:"http://127.0.0.1:8080/getNews",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://127.0.0.1:8080/getNews"),n("OutboundLink")],1),t._v("返回的必须是一个能执行的js文件(一定要和后端约定好哦):")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//服务器端代码\nvar http = require('http')\nvar fs = require('fs')\nvar path = require('path')\nvar url = require('url')\n\nhttp.createServer(function(req, res){\n  var pathObj = url.parse(req.url, true)\n\n  switch (pathObj.pathname) {\n    case '/getNews':\n      var news = [\n        \"😊😊😊😊\",\n        \"Hi~ o(*￣▽￣*)ブ\",\n        \"😁😁😁😁\"\n        ]\n      res.setHeader('Content-Type','text/json; charset=utf-8')\n      //要返回的数据\n      if(pathObj.query.callback){\n        res.end(pathObj.query.callback + '(' + JSON.stringify(news) + ')')\n      }else{\n        res.end(JSON.stringify(news))\n      }\n\n      break;\n\n    default:\n      fs.readFile(path.join(__dirname, pathObj.pathname), function(e, data){\n        if(e){\n          res.writeHead(404, 'not found')\n          res.end('<h1>404 Not Found</h1>')\n        }else{\n          res.end(data)\n        }\n      }) \n  }\n}).listen(8080)\n")])])]),n("p",[t._v("服务器端返回")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('appendHtml(["😊😊😊😊","Hi~ o(*￣▽￣*)ブ","😁😁😁😁"])\n')])])]),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-413dedc4cb1a33b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),t._v(" "),n("blockquote",[n("p",[t._v("JSONP优点：")])]),t._v(" "),n("ul",[n("li",[t._v("它不像XMLHttpRequest对象实现的Ajax请求那样受到同源策略的限制")]),t._v(" "),n("li",[t._v("它的兼容性更好，在老版本的浏览器中可以运行，不需要XMLHttpRequest或ActiveX的支持")]),t._v(" "),n("li",[t._v("它在请求完毕后可以通过调用callback的方式回传结果，方便调用。")])]),t._v(" "),n("blockquote",[n("p",[t._v("JSONP缺点：")])]),t._v(" "),n("ul",[n("li",[t._v("它只支持GET请求而不支持POST等其它类型的HTTP请求，不能提交大量数据")]),t._v(" "),n("li",[t._v("它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题")])]),t._v(" "),n("h3",{attrs:{id:"cors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),n("blockquote",[n("p",[t._v("CORS 全称是跨域资源共享（Cross-Origin Resource Sharing），是一种 ajax 跨域请求资源的方式，支持现代浏览器，IE支持10以上。 实现方式很简单，当你使用 XMLHttpRequest 发送请求时，浏览器发现该请求不符合同源策略，会给该请求加一个请求头：Origin，后台进行一系列处理，如果确定接受请求则在返回结果中加入一个响应头：Access-Control-Allow-Origin; 浏览器判断该相应头中是否包含 Origin 的值，如果有则浏览器会处理响应，我们就可以拿到响应数据，如果不包含浏览器直接驳回，这时我们无法拿到响应数据。所以 CORS 的表象是让你觉得它与同源的 ajax 请求没啥区别，代码完全一样。")])]),t._v(" "),n("p",[t._v("代码相对路径换成了其他域的绝对路径，也就是你要跨域访问的接口地址。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<script>\n  function $(selector){\n    return document.querySelector(selector)\n  }\n  $('.show').addEventListener('click', function(){\n    var xhr = new XMLHttpRequest()\n    xhr.open('GET', 'http://127.0.0.1:8080/getNews', true)\n    xhr.send()\n    xhr.onload = function(){\n      appendHtml(JSON.parse(xhr.responseText))\n    }\n  })\n<\/script>\n")])])]),n("p",[t._v("服务器端对于CORS的支持，主要就是通过设置Access-Control-Allow-Origin来进行的。如果浏览器检测到相应的设置，就可以允许Ajax进行跨域的访问。"),n("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享 CORS 详解"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("服务器端代码\nvar http = require('http')\nvar fs = require('fs')\nvar path = require('path')\nvar url = require('url')\n\nhttp.createServer(function(req, res){\n  var pathObj = url.parse(req.url, true)\n\n  switch (pathObj.pathname) {\n    case '/getNews':\n    var news = [\n      \"😊😊😊😊\",\n      \"Hi~ o(*￣▽￣*)ブ\",\n      \"😁😁😁😁\"\n      ]\n      // 跨域后台设置\n      res.setHeader('Access-Control-Allow-Origin','http://localhost:8080') // 允许访问的域（协议+域名+端口）\n      //res.setHeader('Access-Control-Allow-Origin','*')// 全部允许\n      res.end(JSON.stringify(news))\n      break;\n    default:\n      fs.readFile(path.join(__dirname, pathObj.pathname), function(e, data){\n        if(e){\n          res.writeHead(404, 'not found')\n          res.end('<h1>404 Not Found</h1>')\n        }else{\n          res.end(data)\n        }\n      }) \n  }\n}).listen(8080)\n")])])]),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-2b919503b5b1cbb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"fail"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-8f943addecbd007f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"fail"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16155751-ae1350962e79307a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"success"}})]),t._v(" "),n("blockquote",[n("p",[t._v("因为fanison.com:8080未在允许访问的域内（"),n("code",[t._v("res.setHeader('Access-Control-Allow-Origin','http://localhost:8080')")]),t._v("），跨域失败\n设置为"),n("code",[t._v("res.setHeader('Access-Control-Allow-Origin','*')")]),t._v("可以实现跨域")])])])}),[],!1,null,null,null);e.default=a.exports}}]);