(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{394:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"jquery-ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-ajax"}},[t._v("#")]),t._v(" jQuery Ajax")]),t._v(" "),e("h4",{attrs:{id:"jquery-ajax-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-ajax-settings"}},[t._v("#")]),t._v(" "),e("code",[t._v("jQuery.ajax( [settings ] )")])]),t._v(" "),e("h4",{attrs:{id:"jquery-ajax-url-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-ajax-url-settings"}},[t._v("#")]),t._v(" "),e("code",[t._v("jQuery.ajax( url [, settings ] )")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("url")]),t._v("\n类型: [String]\n一个用来包含发送请求的URL字符串")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("settings")]),t._v('\n类型: [PlainObject]\n一个以"{键:值}"组成的AJAX 请求设置。所有选项都是可选的。可以使用'),e("code",[t._v("$.ajaxSetup()")]),t._v("设置默认参数。")])]),t._v(" "),e("h5",{attrs:{id:"常用的setting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的setting"}},[t._v("#")]),t._v(" 常用的setting")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("async：默认设置下，所有请求均为异步请求（也就是说这是默认设置为 true ）。如果需要发送同步请求，请将此选项设置为 false")])]),t._v(" "),e("li",[e("p",[t._v("beforeSend：请求发送前的回调函数，用来修改请求发送前jqXHR对象，此功能用来设置自定义 HTTP 头信息，等等。该jqXHR和设置对象作为参数传递")])]),t._v(" "),e("li",[e("p",[t._v('cache：如果设置为 false ，浏览器将不缓存此页面。注意: 设置cache为 false将在 HEAD和GET请求中正常工作。它的工作原理是在GET请求参数中附加"_={timestamp}"')])]),t._v(" "),e("li",[e("p",[t._v("context：这个对象用于设置Ajax相关回调函数的上下文。 默认情况下，这个上下文是一个ajax请求使用的参数设置对象")])]),t._v(" "),e("li",[e("p",[t._v("data：发送到服务器的数据。将自动转换为请求字符串格式。GET 请求中将附加在 URL 后面，POST请求作为表单数据")])]),t._v(" "),e("li",[e("p",[t._v("headers：一个额外的{键:值}对映射到请求一起发送。此设置会在beforeSend 函数调用之前被设置 ;因此，请求头中的设置值，会被beforeSend 函数内的设置覆盖")])]),t._v(" "),e("li",[e("p",[t._v('method：HTTP 请求方法 (比如："POST", "GET ", "PUT"，1.9之前使用“type”)')])]),t._v(" "),e("li",[e("p",[t._v(".done(function()):请求成功，调用添加处理程序")])]),t._v(" "),e("li",[e("p",[t._v(".fail(function()):请求失败，调用添加的处理程序。")])]),t._v(" "),e("li",[e("p",[t._v(".always(function()):调用添加处理程序。")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$.ajax({\n  method: "POST",\n  url: "some.php",\n  data: { name: "John", location: "Boston" }\n})；\n\n$.ajax( "example.php" )\n    .done(function() { alert("success"); })\n    .fail(function() { alert("error"); })\n    .always(function() { alert("complete"); });\n')])])]),e("h3",{attrs:{id:"jquery-get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-get"}},[t._v("#")]),t._v(" jQuery.get()")]),t._v(" "),e("blockquote",[e("p",[t._v("使用一个HTTP GET 请求从服务器加载数据")])]),t._v(" "),e("p",[e("code",[t._v("jQuery.get( url [, data ] [, success(data, textStatus, jqXHR) ] [, dataType ])")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("success(data, textStatus, jqXHR)")]),t._v("\n类型: [Function]\n当请求成功后执行的回调函数")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("dataType")]),t._v("\n类型: [String]\n从服务器返回的预期的数据类型。默认：智能猜测（xml, json, script, 或 html）")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$.get("test.cgi", { name: "John", time: "2pm" },\n   function(data){\n     alert("Data Loaded: " + data);\n   });\n')])])]),e("h3",{attrs:{id:"jquery-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-post"}},[t._v("#")]),t._v(" jQuery.post()")]),t._v(" "),e("blockquote",[e("p",[t._v("使用一个HTTP POST 请求从服务器加载数据")])]),t._v(" "),e("p",[e("code",[t._v("jQuery.post( url [, data ] [, success(data, textStatus, jqXHR) ] [, dataType ] )")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$.post(url,data,success,dataType)\n//这相当于以下 Ajax 函数的简写形式\n$.ajax({\n  type: "POST",\n  url: url,\n  data: data,\n  success: success,\n  dataType: dataType\n});\n')])])]),e("h3",{attrs:{id:"jquery-getjson"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-getjson"}},[t._v("#")]),t._v(" jQuery.getJSON()")]),t._v(" "),e("p",[e("code",[t._v("jQuery.getJSON( url [, data ] [, success(data, textStatus, jqXHR) ] )")])]),t._v(" "),e("blockquote",[e("p",[t._v("使用一个HTTP GET请求从服务器加载JSON编码的数据")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('//这相当于Ajax函数的缩写\n$.ajax({\n  dataType: "json",\n  url: url,\n  data: data,\n  success: success\n});\n')])])])])}),[],!1,null,null,null);a.default=n.exports}}]);