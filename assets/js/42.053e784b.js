(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{390:function(e,t,s){"use strict";s.r(t);var a=s(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"jquery基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jquery基础"}},[e._v("#")]),e._v(" jQuery基础")]),e._v(" "),s("h3",{attrs:{id:"链式操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链式操作"}},[e._v("#")]),e._v(" 链式操作")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$('div').find('h3').eq(2).html('hello')\n\n$('div')          找到div元素\n  .find('h3')     选择h3元素\n  .eq(2)          选中第3个h3元素\n  .html('hello')  将其内容改为hello\n")])])]),s("h3",{attrs:{id:"获取元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取元素"}},[e._v("#")]),e._v(" 获取元素")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$(document)     选择整个文档对象\n$('#id')        id选择器\n$('.class')     类选择器\n$('element')    标签选择器\n")])])]),s("h3",{attrs:{id:"创建元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建元素"}},[e._v("#")]),e._v(" 创建元素")]),e._v(" "),s("p",[e._v("把DOM字符串传入$方法即可返回一个jQuery对象")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var obj = $('<div class=\"test\"><p><span>Done</span></p></div>')\n")])])]),s("h3",{attrs:{id:"添加元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加元素"}},[e._v("#")]),e._v(" 添加元素")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('$(".inner").append("<p>Test</p>")  在.inner尾部插入p标签\n\n$(\'.inner\').prepend(\'<p>Test</p>\');   在.inner头部添加p标签\n\n$(\'<p>Test</p>\').appendTo(\'.inner\');  把p标签插入到.inner尾部\n\t\n$(\'<p>Test</p>\').prependTo(\'.inner\'); 把p标签插入到.inner头部\n\n$( ".inner" ).before( "<p>Test</p>" );  在.inner前面插入元素p\n\n$( ".inner" ).after( "<p>Test</p>" );   在.inner后面插入元素p\n\n$( "<p>Test</p>" ).insertBefore(".inner");  把p插入到.inner之前\n\n$( "<p>Test</p>" ).insertAfter( ".inner" ); 把元素p插入到.inner之后\n')])])]),s("h3",{attrs:{id:"删除元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除元素"}},[e._v("#")]),e._v(" 删除元素")]),e._v(" "),s("ul",[s("li",[s("code",[e._v(".remove()")]),e._v(" 将匹配元素集合从DOM中删除，同时移除元素上的事件及 jQuery 数据")]),e._v(" "),s("li",[s("code",[e._v(".detach()")]),e._v(" 删除元素，但保存所有jQuery数据和被移走的元素相关联")]),e._v(" "),s("li",[s("code",[e._v(".empty()")]),e._v(" 清空被选择元素内所有子元素（但是不删除该元素）")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$(\"#div1\").remove();   删除div1及其子元素\n$('div').remove('.test');\n$('body').empty();\n")])])]),s("h3",{attrs:{id:"查找元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找元素"}},[e._v("#")]),e._v(" 查找元素")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$('.test').next();   获取.test之后的同辈元素\n$('.test').prev();  获取.test之前的同辈元素\n$('li.third-item').siblings()   查找元素的兄弟元素\n\n$('.test').nextAll();   获取.test元素所有后面的同辈元素\n$('.test').prevAll();   获取.test元素所有前面的同辈元素\n\n$('li.item-a').parent()     查找父元素\n$('ul.level-2').children()  查找子元素\n$('ul').find('.current');    查找符合ul里的.current\n")])])]),s("h3",{attrs:{id:"修改元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改元素"}},[e._v("#")]),e._v(" 修改元素")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$('div').html('123')    修改div内容为123\n$('div').text('<p>This is a test.</p>')  操作DOM的innerText值\n\n$('.box li').off('click')  移除事件处理函数\n\n$( \"p\" ).addClass( \"myClass yourClass\" );  为元素添加class(追加)\n$( \"p\" ).removeClass( \"myClass yourClass\" ); 移除class\n$( \"#mydiv\" ).hasClass( \"foo\" )  检查是否包含class，返回true/false\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);